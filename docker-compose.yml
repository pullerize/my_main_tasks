services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: agency_backend
    restart: unless-stopped
    volumes:
      - ./data:/data
      - ./agency_backend/static:/app/static
      - ./agency_backend/contracts:/app/contracts
      - ./agency_backend/files:/app/files
    environment:
      - SQLALCHEMY_DATABASE_URL=sqlite:////data/app.db
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: agency_frontend
    restart: unless-stopped
    # ВАЖНО: НЕ публиковать 80 наружу, только внутри сети
    expose:
      - "80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: 8bit-codex-nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot:/var/www/certbot:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    restart: unless-stopped
